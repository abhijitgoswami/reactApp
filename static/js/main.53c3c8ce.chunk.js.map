{"version":3,"sources":["Images/groceries.jpg","Components/homeComponent.jsx","Components/aboutComponent.jsx","Components/loginComponent.jsx","Components/registrationComponent.jsx","Components/headerComponent.jsx","Components/footerComponent.jsx","Components/mainComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","state","isModalOpen","toggleModal","bind","this","setState","Fragment","id","className","Card","to","Button","outline","onClick","type","src","require","alt","CardDeck","CardTitle","CardBody","Modal","isOpen","toggle","ModalHeader","ModalBody","Form","onSubmit","handleSubmit","FormGroup","row","Label","htmlFor","md","Col","Input","name","placeholder","value","username","onChange","handleInputChange","required","password","style","textAlign","size","offset","paddingLeft","check","defaultChecked","remember","marginLeft","color","Component","About","Login","event","target","console","log","JSON","stringify","alert","preventDefault","Register","fname","mob","email","lname","dob","acctype","shopname","shopaddress","getShopDetails","pattern","Header","isNavOpen","toggleNav","Navbar","expand","NavbarToggler","NavbarBrand","href","Collapse","navbar","Nav","NavItem","Row","bsPrefix","Footer","Main","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.53c3c8ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/groceries.9b32da0a.jpg\";","import React, { Component } from 'react';\r\nimport '../styles/home.css';\r\nimport {Card, CardTitle, CardBody, CardDeck, Modal, ModalHeader, ModalBody, Button, Form, FormGroup, Label, Input, Col} from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    render() { \r\n        return (  \r\n            <React.Fragment>          \r\n                <div id=\"home-body\" >                \r\n                    <div id=\"home-top\" className=\"row\">                  \r\n                        <Card id=\"brand\" className=\"col-lg-6 col-md-6 col-sm-12\">   \r\n                            <div id=\"logo\">\r\n                                <div id=\"navbrand\" className=\"mr-auto\">\r\n                                    <NavLink to=\"/home\">Brand Name</NavLink>\r\n                                </div> \r\n                            \r\n                                <div id=\"log-reg\">\r\n                                    <div id=\"log\" className=\"float-left\">\r\n                                        <Button outline onClick={this.toggleModal}>LOGIN</Button>\r\n                                    </div>\r\n                                    <div id=\"reg\" className=\"float-left\">\r\n                                        <NavLink className=\"nav-link\" to=\"/register\">SIGN UP</NavLink>\r\n                                    </div>\r\n                                </div>  \r\n                            </div>    \r\n\r\n                            <div id=\"search-food\">\r\n                                <h3>Unexpected Guest?</h3>\r\n                                <p>Order groceries from favourite grocery store near you!</p>\r\n                                <div id=\"search\">\r\n                                    <input type=\"text\"/>\r\n                                    <button>Find</button>\r\n                                </div>\r\n                            </div>                                                                                 \r\n                        </Card>\r\n\r\n                        <Card id=\"image\" className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <img src={require('../Images/groceries.jpg')} alt=\"img\"/>\r\n                        </Card>                 \r\n                    </div>                             \r\n                </div>\r\n                <div id=\"home-middle\" >\r\n                    <CardDeck>\r\n                        <Card >\r\n                            <CardTitle>\r\n                                <h3>No Minimum Order</h3>\r\n                            </CardTitle>\r\n                            <CardBody>\r\n                                <p>Order in for yourself or for the group, with no restrictions on order value</p>\r\n                            </CardBody>\r\n                        </Card>\r\n                        <Card >\r\n                            <CardTitle>\r\n                                <h3>Live Order Tracking</h3>\r\n                            </CardTitle> \r\n                            <CardBody>\r\n                                <p>Know where your order is at all times, from the restaurant to your doorstep</p>\r\n                            </CardBody>\r\n                        </Card>\r\n                        <Card >\r\n                            <CardTitle>\r\n                                <h3>Fast Home Delivery</h3>\r\n                            </CardTitle>\r\n                            <CardBody>\r\n                                <p>Experience Swiggy's superfast delivery for food delivered fresh &amp; on time</p>\r\n                            </CardBody>\r\n                            \r\n                        </Card>\r\n                    </CardDeck>\r\n                </div>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleSubmit}> \r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"username\" md={2}>Username</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Username\" value={this.state.username}\r\n                                    onChange={this.handleInputChange} required/>\r\n                                </Col>\r\n                            </FormGroup> \r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"password\" md={2}>Password</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password}\r\n                                    onChange={this.handleInputChange} required/>\r\n                                </Col>\r\n                            </FormGroup> \r\n                            <FormGroup row>\r\n                                <Col style={{textAlign: \"center\"}} md={{size: 4, offset:4}}>\r\n                                    <FormGroup style={{paddingLeft:0}} check>\r\n                                        <Label  check>\r\n                                            <Input  type=\"checkbox\" name=\"remember\" defaultChecked={this.state.remember} \r\n                                            onChange={this.handleInputChange}/>{' '}\r\n                                                <strong style={{marginLeft:20}}>Remember me</strong>\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col style={{textAlign: \"center\"}} md={{size: 4, offset:4}}>\r\n                                    <Button type=\"submit\" color=\"primary\" >Login</Button>\r\n                                </Col>\r\n                            </FormGroup> \r\n\r\n                            <div id=\"log-footer\">\r\n                                <strong>Not have an account ?</strong>{\" \"}\r\n                                <strong><NavLink className=\"nav-link\" to=\"/register\">SIGN Up</NavLink></strong>\r\n                            </div> \r\n                            \r\n                        </Form>\r\n                    </ModalBody>      \r\n                </Modal>\r\n            </React.Fragment>\r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n \r\nexport default Home;\r\n\r\n// <Nav className=\"ml-auto\" navbar>\r\n//     <NavItem>\r\n//         <Button outline onClick={this.toggleModal}>\r\n//             <span className=\"fa fa-sign-in fa-lg\"></span>Login\r\n//         </Button>\r\n//     </NavItem>\r\n// </Nav>","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n    render() { \r\n        return (  \r\n           <div className=\"container col-12 col-md-9\">\r\n               <h1>About</h1>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default About;","import React, { Component } from 'react';\r\nimport {Form, Button, FormGroup, Label, Input, Col} from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\nimport '../styles/login.css';\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            remember: false,\r\n            password: ''\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event){\r\n        console.log(\"Current State is: \" + JSON.stringify(this.state));\r\n        alert(\"Current State is: \" + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() { \r\n        return (     \r\n            <div id=\"login-box\" className=\"container col-12 col-md-9\">\r\n                <div id=\"log-title\" className=\"container\">\r\n                    <h3>Login</h3>\r\n                </div>\r\n                <Form onSubmit={this.handleSubmit}> \r\n                    <FormGroup row>\r\n                        <Label htmlFor=\"username\" md={2}>Username</Label>\r\n                        <Col md={10}>\r\n                            <Input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Username\" value={this.state.username}\r\n                            onChange={this.handleInputChange} required/>\r\n                        </Col>\r\n                    </FormGroup> \r\n                    <FormGroup row>\r\n                        <Label htmlFor=\"password\" md={2}>Password</Label>\r\n                        <Col md={10}>\r\n                            <Input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password}\r\n                            onChange={this.handleInputChange} required/>\r\n                        </Col>\r\n                    </FormGroup> \r\n                    <FormGroup row>\r\n                        <Col style={{textAlign: \"center\"}} md={{size: 4, offset:4}}>\r\n                            <FormGroup style={{paddingLeft:0}} check>\r\n                                <Label  check>\r\n                                    <Input  type=\"checkbox\" name=\"remember\" defaultChecked={this.state.remember} \r\n                                    onChange={this.handleInputChange}/>{' '}\r\n                                        <strong style={{marginLeft:20}}>Remember me</strong>\r\n                                </Label>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Col style={{textAlign: \"center\"}} md={{size: 4, offset:4}}>\r\n                            <Button type=\"submit\" color=\"primary\" >Login</Button>\r\n                        </Col>\r\n                    </FormGroup> \r\n\r\n                    <div id=\"log-footer\">\r\n                        <strong>Not have an account ?</strong>{\" \"}\r\n                        <strong><NavLink className=\"nav-link\" to=\"/register\">SIGN Up</NavLink></strong>\r\n                    </div> \r\n                    \r\n                </Form>\r\n            </div> \r\n        );\r\n    }\r\n}\r\n \r\nexport default Login;","import React, { Component } from 'react';\r\nimport {Form, Button, FormGroup, Label, Input, Col, Modal, ModalHeader, ModalBody} from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\nimport '../styles/register.css';\r\n\r\nclass Register extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            fname: '',\r\n            mob: '',\r\n            email: '',\r\n            lname: '',\r\n            dob: '',\r\n            acctype: '',\r\n            shopname: '',\r\n            shopaddress: '',\r\n            isModalOpen: false\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.getShopDetails = this.getShopDetails.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event){\r\n        console.log(\"Current State is: \" + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }\r\n\r\n    getShopDetails(){\r\n        if(this.state.acctype === 'vendor'){\r\n            return(\r\n                <React.Fragment>\r\n                    <FormGroup row>\r\n                        <Label htmlFor=\"shopname\" md={{size:2, offset:1}}>Shop name</Label>\r\n                        <Col md={9}>\r\n                            <Input type=\"text\" id=\"shopname\" name=\"shopname\" placeholder=\"Shopname\" value={this.state.shopname} onChange={this.handleInputChange}/>                          \r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup row>\r\n                        <Label htmlFor=\"shopaddress\" md={{size:2, offset:1}}>Shopaddress</Label>\r\n                        <Col md={9}>\r\n                            <Input type=\"text\" id=\"shopaddress\" name=\"shopaddress\" placeholder=\"Shopaddress\" \r\n                            value={this.state.shopaddress} onChange={this.handleInputChange} />                \r\n                        </Col>\r\n                    </FormGroup>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return (  \r\n            <React.Fragment>\r\n                <div id=\"register-box\" className=\"container col-12 col-md-9\">\r\n                    <div id=\"reg-title\" className=\"container\">\r\n                        <h3>Register</h3>\r\n                    </div>\r\n                    <Form onSubmit={this.handleSubmit}> \r\n                        <FormGroup row>\r\n                            <Label  htmlFor=\"fname\" md={2}>First Name</Label>\r\n                            <Col md={9}>\r\n                                <Input type=\"text\" id=\"fname\" name=\"fname\" placeholder=\"First Name\" value={this.state.fname}\r\n                                 onChange={this.handleInputChange} required/>\r\n                            </Col>\r\n                        </FormGroup> \r\n\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"lname\" md={2}>Last Name</Label>\r\n                            <Col md={9}>\r\n                                <Input type=\"text\" id=\"lname\" name=\"lname\" placeholder=\"Last Name\" value={this.state.lname}\r\n                                onChange={this.handleInputChange} required/>              \r\n                            </Col>\r\n                        </FormGroup> \r\n\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"dob\" md={2}>Date of birth</Label>\r\n                            <Col md={9}>\r\n                                <Input type=\"date\" id=\"dob\" name=\"dob\" placeholder=\"DOB\" value={this.state.dob}              onChange={this.handleInputChange} required/>\r\n                            </Col>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"mob\" md={{size:2, offset:1}}>Mobile</Label>\r\n                            <Col md={9}>\r\n                                <Input type=\"tel\" id=\"mob\" name=\"mob\" placeholder=\"Mobile\" value={this.state.mob} \r\n                                onChange={this.handleInputChange} pattern = \"[0-9]{10}\" required/>\r\n                            </Col>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"email\" md={{size:2, offset:1}}>Email</Label>\r\n                            <Col md={9}>\r\n                                <Input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" value={this.state.email}\r\n                                onChange={this.handleInputChange}/> \r\n                            </Col>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup row id=\"cust-type\">\r\n                            <Label htmlFor=\"acctype\" md={{size:3, offset:1}}>Account type</Label>\r\n                            <Col  md={{size: 3, offset:1}}>                                                      \r\n                                <Input type=\"radio\" name=\"acctype\" value='customer' onChange={this.handleInputChange} \r\n                                required/>{' '}\r\n                                    <p>Customer</p>                                                                \r\n                            </Col>     \r\n                            <Col md={{size: 3, offset:1}}>                           \r\n                                <Input type=\"radio\" name=\"acctype\" value='vendor' onChange={this.handleInputChange}\r\n                                required/>{' '}\r\n                                    <p>Vendor</p>                             \r\n                            </Col>\r\n                        </FormGroup>\r\n\r\n                        {this.getShopDetails()}\r\n\r\n                        <FormGroup row>\r\n                            <Col id=\"reg-button\" style={{textAlign: \"center\"}} md={{size: 4, offset:4}}>\r\n                                <Button type=\"submit\" color=\"primary\" >Register</Button>\r\n                            </Col>\r\n                        </FormGroup>  \r\n                    </Form>\r\n                    <div id=\"reg-footer\">\r\n                        <strong>Already have account ?</strong>{\" \"}\r\n                        <strong><Button onClick={this.toggleModal}>SIGN IN</Button></strong>\r\n                    </div>\r\n                </div> \r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleSubmit}> \r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"username\" md={2}>Username</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Username\" value={this.state.username}\r\n                                    onChange={this.handleInputChange} required/>\r\n                                </Col>\r\n                            </FormGroup> \r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"password\" md={2}>Password</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password}\r\n                                    onChange={this.handleInputChange} required/>\r\n                                </Col>\r\n                            </FormGroup> \r\n                            <FormGroup row>\r\n                                <Col style={{textAlign: \"center\"}} md={{size: 4, offset:4}}>\r\n                                    <FormGroup style={{paddingLeft:0}} check>\r\n                                        <Label  check>\r\n                                            <Input  type=\"checkbox\" name=\"remember\" defaultChecked={this.state.remember} \r\n                                            onChange={this.handleInputChange}/>{' '}\r\n                                                <strong style={{marginLeft:20}}>Remember me</strong>\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col style={{textAlign: \"center\"}} md={{size: 4, offset:4}}>\r\n                                    <Button type=\"submit\" color=\"primary\" >Login</Button>\r\n                                </Col>\r\n                            </FormGroup> \r\n\r\n                            <div id=\"log-footer\">\r\n                                <strong>Not have an account ?</strong>{\" \"}\r\n                                <strong><NavLink className=\"nav-link\" to=\"/register\">SIGN Up</NavLink></strong>\r\n                            </div> \r\n                            \r\n                        </Form>\r\n                    </ModalBody>      \r\n                </Modal>\r\n            </React.Fragment>            \r\n        );\r\n    }\r\n}\r\n \r\nexport default Register;","import React, { Component } from 'react';\r\nimport '../styles/header.css';\r\nimport {Nav, Navbar, NavbarBrand, Collapse, NavItem, NavbarToggler} from 'reactstrap';\r\nimport { Row } from 'react-bootstrap';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    render() { \r\n        return (  \r\n            <React.Fragment>\r\n                <header>\r\n                    <Navbar id=\"header\" expand=\"md\" className=\"navbar-dark bg-dark fixed-top\">\r\n                        <div className=\"container-fluid\">\r\n                        \r\n                            <NavbarToggler id=\"hamburger\" onClick={this.toggleNav}/>\r\n\r\n                            <NavbarBrand className=\"mr-auto\" href=\"/home\">\r\n                                <span>Brand Name</span>\r\n                            </NavbarBrand>\r\n                            \r\n                            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                                <Nav className=\"ml-auto \">                               \r\n                                    <NavItem style={{textAlign:\"center\"}} className=\"col-md-3\">\r\n                                        <NavLink className=\"nav-link\" to=\"/home\">Home</NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem style={{textAlign:\"center\"}} className=\"col-md-3\">\r\n                                        <NavLink className=\"nav-link\" to=\"/shop\">Shop</NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem style={{textAlign:\"center\"}} className=\"col-md-3\">\r\n                                        <NavLink className=\"nav-link\" to=\"/about\">About</NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem style={{textAlign:\"center\"}} className=\"col-md-3\">\r\n                                        <NavLink className=\"nav-link\" to=\"/contact\">Contact</NavLink>\r\n                                    </NavItem>                                \r\n                                </Nav>\r\n                            </Collapse> \r\n\r\n                            <Row bsPrefix=\"d-block d-lg-none d-md-none\">\r\n                                <div className=\"container\">\r\n                                    <div id=\"mobile\" >\r\n                                        <span>8409279455</span>\r\n                                    </div>\r\n                                </div>\r\n                            </Row>                       \r\n                        </div>\r\n\r\n                    </Navbar>\r\n                </header>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Header;","import React, { Component } from 'react';\r\nimport {NavbarBrand} from 'reactstrap';\r\nimport '../styles/footer.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Footer extends Component {\r\n    render() { \r\n        return (  \r\n            <footer >\r\n                <div id=\"footer\" className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div id=\"company\" className=\"col-lg-3 col-md-12 col-sm-12 col-xs-12\">\r\n                            <h5>Company</h5>\r\n                            <p><NavLink to=\"/home\">Home</NavLink></p>\r\n                            <p><NavLink to=\"/about\">About us</NavLink></p>\r\n                        </div>\r\n\r\n                        <div id=\"contact\" className=\"col-lg-3 col-md-12 col-sm-12 col-xs-12\">\r\n                            <h5>Contact</h5>\r\n                            <p><NavLink to=\"/contact\">Contact Us</NavLink></p>\r\n                            <p><NavLink to=\"/help\">Help and Support</NavLink></p>\r\n                        </div>\r\n\r\n                        <div id=\"legal\" className=\"col-lg-3 col-md-12 col-sm-12 col-xs-12\">\r\n                            <h5>Legal</h5>\r\n                            <p><NavLink to=\"/contact\">Terms &amp; Condition</NavLink></p>\r\n                            <p><NavLink to=\"/help\">Refund &amp; Cancellation</NavLink></p>\r\n                            <p><NavLink to=\"/contact\">Privacy Policy</NavLink></p>\r\n                            <p><NavLink to=\"/help\">Cookies Policy</NavLink></p>\r\n                            <p><NavLink to=\"/help\">Offer Terms</NavLink></p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr/>\r\n                   \r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div id=\"fotter-brand\" className=\"col-lg-6 col-sm-12 col-xs-12\">\r\n                                <NavbarBrand className=\"mr-auto\" href=\"/home\">\r\n                                    <span>Brand Name</span>\r\n                                </NavbarBrand>\r\n                            </div>\r\n\r\n                            <div id=\"copyright\" className=\"col-lg-6 col-sm-12 col-xs-12\">\r\n                                <h5>&copy; 2020 Brand Name</h5>\r\n                            </div>\r\n\r\n                            <div id=\"social-network\">\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Footer;","import React, { Component } from 'react';\r\nimport Home from './homeComponent';\r\nimport About from './aboutComponent';\r\nimport Login from './loginComponent';\r\nimport {BrowserRouter, Route, Switch, Redirect} from 'react-router-dom';\r\nimport Register from './registrationComponent';\r\nimport Header from './headerComponent';\r\nimport Footer from './footerComponent';\r\n\r\nclass Main extends Component {\r\n    \r\n    render() { \r\n        return (           \r\n            <BrowserRouter>\r\n                <Header/>\r\n                <Switch>\r\n                    <Route path=\"/home\" component={Home}/>\r\n                    <Route path=\"/about\" component={About}/>\r\n                    <Route path=\"/login\" component={Login}/>\r\n                    <Route path=\"/register\" component={Register}/>\r\n                    <Redirect to=\"/home\"/>\r\n                </Switch>\r\n                <Footer/>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Main;","import React, { Component } from 'react';\nimport Main from './Components/mainComponent';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass App extends Component {\n  render() { \n    return (  \n      <Main/>\n    );\n  }\n}\n \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>,document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}