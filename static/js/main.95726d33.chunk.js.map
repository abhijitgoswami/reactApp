{"version":3,"sources":["Images/groceries.jpg","Components/homeComponent.jsx","Components/aboutComponent.jsx","Components/loginComponent.jsx","Components/registrationComponent.jsx","Components/headerComponent.jsx","Components/footerComponent.jsx","Components/mainComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","Fragment","id","className","Card","to","type","src","require","alt","CardDeck","CardTitle","CardBody","Component","About","Login","props","state","username","remember","password","handleSubmit","bind","handleInputChange","event","target","value","name","this","setState","console","log","JSON","stringify","alert","preventDefault","Form","onSubmit","FormGroup","row","Label","htmlFor","md","Col","Input","placeholder","onChange","style","textAlign","size","offset","paddingLeft","check","defaultChecked","marginLeft","Button","color","Register","handleBlur","field","evt","touched","fname","mob","email","lname","dob","acctype","shopname","shopaddress","getShopDetails","errors","length","test","split","filter","x","onBlur","valid","invalid","FormFeedback","validate","Header","isNavOpen","toggleNav","Navbar","expand","NavbarToggler","onClick","NavbarBrand","href","Collapse","isOpen","navbar","Nav","NavItem","Row","bsPrefix","Footer","Main","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.95726d33.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/groceries.9b32da0a.jpg\";","import React, { Component } from 'react';\r\nimport '../styles/home.css';\r\nimport {Card, CardTitle, CardBody, CardDeck} from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n    render() { \r\n        return (  \r\n            <React.Fragment>          \r\n                <div id=\"home-body\" >                \r\n                    <div id=\"home-top\" className=\"row\">                  \r\n                        <Card id=\"brand\" className=\"col-lg-6 col-md-6 col-sm-12\">   \r\n                            <div id=\"logo\">\r\n                                <div id=\"navbrand\" className=\"mr-auto\">\r\n                                    <NavLink to=\"/home\">Brand Name</NavLink>\r\n                                </div> \r\n                            \r\n                                <div id=\"log-reg\">\r\n                                    <div id=\"log\" className=\"float-left\">\r\n                                        <NavLink className=\"nav-link\" to=\"/login\">LOGIN</NavLink>\r\n                                    </div>\r\n                                    <div id=\"reg\" className=\"float-left\">\r\n                                        <NavLink className=\"nav-link\" to=\"/register\">SIGN UP</NavLink>\r\n                                    </div>\r\n                                </div>  \r\n                            </div>    \r\n\r\n                            <div id=\"search-food\">\r\n                                <h3>Unexpected Guest?</h3>\r\n                                <p>Order groceries from favourite grocery store near you!</p>\r\n                                <div id=\"search\">\r\n                                    <input type=\"text\"/>\r\n                                    <button>Find</button>\r\n                                </div>\r\n                            </div>                                                                                 \r\n                        </Card>\r\n\r\n                        <Card id=\"image\" className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <img src={require('../Images/groceries.jpg')} alt=\"img\"/>\r\n                        </Card>                 \r\n                    </div>                             \r\n                </div>\r\n                <div id=\"home-middle\" >\r\n                    <CardDeck>\r\n                        <Card >\r\n                            <CardTitle>\r\n                                <h3>No Minimum Order</h3>\r\n                            </CardTitle>\r\n                            <CardBody>\r\n                                <p>Order in for yourself or for the group, with no restrictions on order value</p>\r\n                            </CardBody>\r\n                        </Card>\r\n                        <Card >\r\n                            <CardTitle>\r\n                                <h3>Live Order Tracking</h3>\r\n                            </CardTitle> \r\n                            <CardBody>\r\n                                <p>Know where your order is at all times, from the restaurant to your doorstep</p>\r\n                            </CardBody>\r\n                        </Card>\r\n                        <Card >\r\n                            <CardTitle>\r\n                                <h3>Fast Home Delivery</h3>\r\n                            </CardTitle>\r\n                            <CardBody>\r\n                                <p>Experience Swiggy's superfast delivery for food delivered fresh &amp; on time</p>\r\n                            </CardBody>\r\n                            \r\n                        </Card>\r\n                    </CardDeck>\r\n                </div>\r\n            </React.Fragment>\r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n \r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n    render() { \r\n        return (  \r\n           <div className=\"container col-12 col-md-9\">\r\n               <h1>About</h1>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default About;","import React, { Component } from 'react';\r\nimport {Form, Button, FormGroup, Label, Input, Col} from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\nimport '../styles/login.css';\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            remember: false,\r\n            password: ''\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event){\r\n        console.log(\"Current State is: \" + JSON.stringify(this.state));\r\n        alert(\"Current State is: \" + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() { \r\n        return (     \r\n            <div id=\"login-box\" className=\"container col-12 col-md-9\">\r\n                <div id=\"log-title\" className=\"container\">\r\n                    <h3>Login</h3>\r\n                </div>\r\n                <Form onSubmit={this.handleSubmit}> \r\n                    <FormGroup row>\r\n                        <Label htmlFor=\"username\" md={2}>Username</Label>\r\n                        <Col md={10}>\r\n                            <Input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Username\" value={this.state.username}\r\n                            onChange={this.handleInputChange}/>\r\n                        </Col>\r\n                    </FormGroup> \r\n                    <FormGroup row>\r\n                        <Label htmlFor=\"password\" md={2}>Password</Label>\r\n                        <Col md={10}>\r\n                            <Input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password}\r\n                            onChange={this.handleInputChange}/>\r\n                        </Col>\r\n                    </FormGroup> \r\n                    <FormGroup row>\r\n                        <Col style={{textAlign: \"center\"}} md={{size: 4, offset:4}}>\r\n                            <FormGroup style={{paddingLeft:0}} check>\r\n                                <Label  check>\r\n                                    <Input  type=\"checkbox\" name=\"remember\" defaultChecked={this.state.remember} \r\n                                    onChange={this.handleInputChange}/>{' '}\r\n                                        <strong style={{marginLeft:20}}>Remember me</strong>\r\n                                </Label>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Col style={{textAlign: \"center\"}} md={{size: 4, offset:4}}>\r\n                            <Button type=\"submit\" color=\"primary\" >Login</Button>\r\n                        </Col>\r\n                    </FormGroup> \r\n\r\n                    <div id=\"log-footer\">\r\n                        <strong>Not have an account ?</strong>{\" \"}\r\n                        <strong><NavLink className=\"nav-link\" to=\"/register\">SIGN Up</NavLink></strong>\r\n                    </div> \r\n                    \r\n                </Form>\r\n            </div> \r\n        );\r\n    }\r\n}\r\n \r\nexport default Login;","import React, { Component } from 'react';\r\nimport {Form, Button, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\nimport '../styles/register.css';\r\n\r\nclass Register extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            fname: '',\r\n            mob: '',\r\n            email: '',\r\n            lname: '',\r\n            dob: '',\r\n            acctype: '',\r\n            shopname: '',\r\n            shopaddress: '',\r\n            touched: {\r\n                fname: false,\r\n                mob: false,\r\n                email: false,\r\n                lname: false,\r\n                dob: false,\r\n                acctype: false,\r\n                shopname: false,\r\n                shopaddress: false,\r\n            }\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.getShopDetails = this.getShopDetails.bind(this);\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n    }\r\n\r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event){\r\n        console.log(\"Current State is: \" + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n           touched: {...this.state.touched, [field]: true} \r\n        });\r\n    }\r\n\r\n    validate(fname, lname, dob, mob, email, acctype, shopname, shopaddress){\r\n        const errors = {\r\n            fname: '', \r\n            lname: '', \r\n            dob: '', \r\n            mob: '', \r\n            email: '',\r\n            acctype: '', \r\n            shopname: '', \r\n            shopaddress: ''\r\n        };\r\n\r\n        if(this.state.touched.fname && fname.length === 0)\r\n            errors.fname = \"First name cann't be empty\";\r\n        if(this.state.touched.lname && lname.length === 0)\r\n            errors.lname = \"Last name cann't be empty\";\r\n        if(this.state.touched.dob && dob.length === 0)\r\n            errors.dob = \"Date of birth cann't be empty\";  \r\n\r\n        const reg = /^\\d+$/;\r\n        if(this.state.touched.mob && !reg.test(mob))\r\n            errors.mob = \"Field shpuld contain only numbers\";\r\n        if(this.state.touched.email && email.split('').filter(x => x ==='@').length !== 1)\r\n            errors.email = \"Invalid Email!\";\r\n        if(this.state.touched.shopname && shopname.length === 0)\r\n            errors.shopname = \"Shop name cann't be empty\";\r\n        if(this.state.touched.shopaddress &&  shopaddress.length === 0)\r\n            errors.shopaddress = \"Shop address cann't be empty\";\r\n\r\n        return errors;\r\n    }\r\n\r\n    getShopDetails(errors){\r\n        if(this.state.acctype === 'vendor'){\r\n            return(\r\n                <React.Fragment>\r\n                    <FormGroup row>\r\n                        <Label htmlFor=\"shopname\" md={{size:2, offset:1}}>Shop name</Label>\r\n                        <Col md={9}>\r\n                            <Input type=\"text\" id=\"shopname\" name=\"shopname\" placeholder=\"Shopname\" value={this.state.shopname} onChange={this.handleInputChange} onBlur={this.handleBlur('shopname')}\r\n                            valid={errors.shopname === ''} invalid={errors.shopname !== ''}/>\r\n                            <FormFeedback>{errors.shopname}</FormFeedback>\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup row>\r\n                        <Label htmlFor=\"shopaddress\" md={{size:2, offset:1}}>Shopaddress</Label>\r\n                        <Col md={9}>\r\n                            <Input type=\"text\" id=\"shopaddress\" name=\"shopaddress\" placeholder=\"Shopaddress\" \r\n                            value={this.state.shopaddress} onChange={this.handleInputChange} \r\n                            onBlur={this.handleBlur('shopaddress')} valid={errors.shopaddress === ''} \r\n                            invalid={errors.shopaddress !== ''}/>\r\n                            <FormFeedback>{errors.shopaddress}</FormFeedback>\r\n                        </Col>\r\n                    </FormGroup>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    }\r\n\r\n    render() { \r\n        const errors = this.validate(this.state.fname, this.state.lname, this.state.dob, this.state.mob, this.state.email, \r\n            this.state.acctype, this.state.shopname, this.state.shopaddress)\r\n        return (  \r\n            <React.Fragment>\r\n                <div id=\"register-box\" className=\"container col-12 col-md-9\">\r\n                    <div id=\"reg-title\" className=\"container\">\r\n                        <h3>Register</h3>\r\n                    </div>\r\n                    <Form onSubmit={this.handleSubmit}> \r\n                        <FormGroup row>\r\n                            <Label  htmlFor=\"fname\" md={2}>First Name</Label>\r\n                            <Col md={9}>\r\n                                <Input type=\"text\" id=\"fname\" name=\"fname\" placeholder=\"First Name\" value={this.state.fname}\r\n                                valid={errors.fname === ''} invalid={errors.fname !== ''} \r\n                                onChange={this.handleInputChange} onBlur={this.handleBlur('fname')}/>\r\n                                <FormFeedback>{errors.fname}</FormFeedback>\r\n                            </Col>\r\n                        </FormGroup> \r\n\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"lname\" md={2}>Last Name</Label>\r\n                            <Col md={9}>\r\n                                <Input type=\"text\" id=\"lname\" name=\"lname\" placeholder=\"Last Name\" value={this.state.lname}\r\n                                valid={errors.lname === ''} invalid={errors.lname !== ''} \r\n                                onChange={this.handleInputChange} onBlur={this.handleBlur('lname')}/>\r\n                                <FormFeedback>{errors.lname}</FormFeedback>\r\n                            </Col>\r\n                        </FormGroup> \r\n\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"dob\" md={2}>Date of birth</Label>\r\n                            <Col md={9}>\r\n                                <Input type=\"date\" id=\"dob\" name=\"dob\" placeholder=\"DOB\" value={this.state.dob} \r\n                                valid={errors.dob === ''} invalid={errors.dob !== ''}\r\n                                onChange={this.handleInputChange} onBlur={this.handleBlur('dob')}/>\r\n                                <FormFeedback>{errors.dob}</FormFeedback>\r\n                            </Col>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"mob\" md={{size:2, offset:1}}>Mobile</Label>\r\n                            <Col md={9}>\r\n                                <Input type=\"tel\" id=\"mob\" name=\"mob\" placeholder=\"Mobile\" value={this.state.mob} \r\n                                onChange={this.handleInputChange} onBlur={this.handleBlur('mob')} \r\n                                valid={errors.mob === ''} invalid={errors.mob !== ''}/>\r\n                                <FormFeedback>{errors.mob}</FormFeedback>\r\n                            </Col>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"email\" md={{size:2, offset:1}}>Email</Label>\r\n                            <Col md={9}>\r\n                                <Input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" value={this.state.email}\r\n                                valid={errors.email === ''} invalid={errors.email !== ''} \r\n                                onChange={this.handleInputChange} onBlur={this.handleBlur('email')}/>\r\n                                <FormFeedback>{errors.email}</FormFeedback>\r\n                            </Col>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup row id=\"cust-type\">\r\n                            <Label htmlFor=\"acctype\" md={{size:3, offset:1}}>Account type</Label>\r\n                            <Col  md={{size: 3, offset:1}}>                                                      \r\n                                <Input type=\"radio\" name=\"acctype\" value='customer' onChange={this.handleInputChange} \r\n                                onBlur={this.handleBlur('acctype')}/>{' '}\r\n                                    <p>Customer</p>                                                                \r\n                            </Col>     \r\n                            <Col md={{size: 3, offset:1}}>                           \r\n                                <Input type=\"radio\" name=\"acctype\" value='vendor' onChange={this.handleInputChange}\r\n                                onBlur={this.handleBlur('acctype')}/>{' '}\r\n                                    <p>Vendor</p>                             \r\n                            </Col>\r\n                        </FormGroup>\r\n\r\n                        {this.getShopDetails(errors)}\r\n\r\n                        <FormGroup row>\r\n                            <Col id=\"reg-button\" style={{textAlign: \"center\"}} md={{size: 4, offset:4}}>\r\n                                <Button type=\"submit\" color=\"primary\" >Register</Button>\r\n                            </Col>\r\n                        </FormGroup>  \r\n                    </Form>\r\n                    <div id=\"reg-footer\">\r\n                        <strong>Already have account ?</strong>{\" \"}\r\n                        <strong><NavLink className=\"nav-link\" to=\"/login\">SIGN IN</NavLink></strong>\r\n                    </div>\r\n                </div> \r\n            </React.Fragment>            \r\n        );\r\n    }\r\n}\r\n \r\nexport default Register;","import React, { Component } from 'react';\r\nimport '../styles/header.css';\r\nimport {Nav, Navbar, NavbarBrand, Collapse, NavItem, NavbarToggler} from 'reactstrap';\r\nimport { Row } from 'react-bootstrap';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    render() { \r\n        return (  \r\n            <React.Fragment>\r\n            <header>\r\n                <Navbar id=\"header\" expand=\"md\" className=\"navbar-dark bg-dark fixed-top\">\r\n                    <div className=\"container-fluid\">\r\n                       \r\n                        <NavbarToggler id=\"hamburger\" onClick={this.toggleNav}/>\r\n\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/home\">\r\n                            <span>Brand Name</span>\r\n                        </NavbarBrand>\r\n                        \r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav className=\"ml-auto\">                               \r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/shop\">Shop</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/about\">About</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contact\">Contact</NavLink>\r\n                                </NavItem>                                \r\n                            </Nav>\r\n                        </Collapse> \r\n\r\n                        <Row bsPrefix=\"d-block d-lg-none d-md-none\">\r\n                            <div className=\"container\">\r\n                                <div id=\"mobile\" >\r\n                                    <span>8409279455</span>\r\n                                </div>\r\n                                <div id=\"profile\">\r\n                                    <a href=\"/login\">Login</a>\r\n                                </div>\r\n                            </div>\r\n                        </Row>                       \r\n                    </div>\r\n                </Navbar>\r\n            </header>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Header;","import React, { Component } from 'react';\r\nimport {NavbarBrand} from 'reactstrap';\r\nimport '../styles/footer.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Footer extends Component {\r\n    render() { \r\n        return (  \r\n            <footer >\r\n                <div id=\"footer\" className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div id=\"company\" className=\"col-lg-3 col-md-12 col-sm-12 col-xs-12\">\r\n                            <h5>Company</h5>\r\n                            <p><NavLink to=\"/home\">Home</NavLink></p>\r\n                            <p><NavLink to=\"/about\">About us</NavLink></p>\r\n                        </div>\r\n\r\n                        <div id=\"contact\" className=\"col-lg-3 col-md-12 col-sm-12 col-xs-12\">\r\n                            <h5>Contact</h5>\r\n                            <p><NavLink to=\"/contact\">Contact Us</NavLink></p>\r\n                            <p><NavLink to=\"/help\">Help and Support</NavLink></p>\r\n                        </div>\r\n\r\n                        <div id=\"legal\" className=\"col-lg-3 col-md-12 col-sm-12 col-xs-12\">\r\n                            <h5>Legal</h5>\r\n                            <p><NavLink to=\"/contact\">Terms &amp; Condition</NavLink></p>\r\n                            <p><NavLink to=\"/help\">Refund &amp; Cancellation</NavLink></p>\r\n                            <p><NavLink to=\"/contact\">Privacy Policy</NavLink></p>\r\n                            <p><NavLink to=\"/help\">Cookies Policy</NavLink></p>\r\n                            <p><NavLink to=\"/help\">Offer Terms</NavLink></p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr/>\r\n                   \r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div id=\"fotter-brand\" className=\"col-lg-6 col-sm-12 col-xs-12\">\r\n                                <NavbarBrand className=\"mr-auto\" href=\"/home\">\r\n                                    <span>Brand Name</span>\r\n                                </NavbarBrand>\r\n                            </div>\r\n\r\n                            <div id=\"copyright\" className=\"col-lg-6 col-sm-12 col-xs-12\">\r\n                                <h5>&copy; 2020 Brand Name</h5>\r\n                            </div>\r\n\r\n                            <div id=\"social-network\">\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Footer;","import React, { Component } from 'react';\r\nimport Home from './homeComponent';\r\nimport About from './aboutComponent';\r\nimport Login from './loginComponent';\r\nimport {BrowserRouter, Route, Switch, Redirect} from 'react-router-dom';\r\nimport Register from './registrationComponent';\r\nimport Header from './headerComponent';\r\nimport Footer from './footerComponent';\r\n\r\nclass Main extends Component {\r\n    \r\n    render() { \r\n        return (           \r\n            <BrowserRouter>\r\n                <Header/>\r\n                <Switch>\r\n                    <Route path=\"/home\" component={Home}/>\r\n                    <Route path=\"/about\" component={About}/>\r\n                    <Route path=\"/login\" component={Login}/>\r\n                    <Route path=\"/register\" component={Register}/>\r\n                    <Redirect to=\"/home\"/>\r\n                </Switch>\r\n                <Footer/>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Main;","import React, { Component } from 'react';\nimport Main from './Components/mainComponent';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass App extends Component {\n  render() { \n    return (  \n      <Main/>\n    );\n  }\n}\n \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>,document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}